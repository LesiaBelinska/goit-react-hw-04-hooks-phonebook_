{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","htmlFor","type","pattern","title","required","onChange","id","input","button","Filter","filterInputId","ContactListItem","onDeleteContact","item","onClick","ContactList","contacts","list","map","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","find","contact","alert","prevContacts","normalizedFilter","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b913c68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n \n\n    const nameInputId = () => shortid.generate();\n    const numberInputId = () => shortid.generate();\n\n    const handleChange = e => {\n    const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n    }\n    }\n\n    const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n    }\n    \n    \n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    \n        return (\n            <form className={s.form}\n                onSubmit={handleSubmit}>\n                <label className={s.label}\n                    htmlFor={nameInputId}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={handleChange}\n                        id={nameInputId}\n                        className={s.input}\n                    />\n                </label>\n\n                <label className={s.label}\n                    htmlFor={numberInputId}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={handleChange}\n                        id={numberInputId}\n                        className={s.input}\n                    />\n                </label>\n\n                <button\n                    className={s.button}\n                    type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nexport default function Filter({value, onChange}){\n\n    const filterInputId = () => shortid.generate();\n\n    \n        return (\n            <label className={s.label} htmlFor={filterInputId}>\n                Find contacts by name\n                <input className={s.input}\n                    type='text'\n                    value={value}\n                    onChange={onChange}\n                    id={filterInputId}\n                />\n            </label>\n        )\n}\n\n\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n    return (\n        <li className={s.item}>\n            {name} : {number}\n            <button className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n        >\n            Delete\n        </button>\n        </li>\n    )\n}\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\n\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\n    return (\n        <ul className={s.list}>\n            {contacts().map(({ id, name, number }) => {\n                return (\n                    <ContactListItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        onDeleteContact={onDeleteContact}\n                    />\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n    contacts: PropTypes.func.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nfunction App(){\n  \n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  \n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`)\n      return;\n    }\n  \n    setContacts(prevContacts => [newContact, ...prevContacts]);\n  };\n  \n   const changeFilter = e => {\n    setFilter({ filter: e.currentTarget.value });\n  };\n  \n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n  \n  \n    \n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={addContact} contacts={contacts} />\n        <h2 className=\"subtitle\">Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={findContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    )\n}\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"text\":\"ContactList_text__2dM24\",\"span\":\"ContactList_span__330r8\",\"button\":\"ContactList_button__1RuFy\",\"heart\":\"ContactList_heart__2CfmH\"};"],"sourceRoot":""}